generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Class {
  id          String @id @default(cuid())
  name        String
  description String
  teacher_id  String

  discussions Discussion[]
  students    StudentClass[]
  joinCodes   JoinCode[]
}

model StudentClass {
  id         Int    @id @default(autoincrement())
  student_id String
  class_id   String
  class      Class  @relation(references: [id], fields: [class_id], onDelete: Cascade)
}

model JoinCode {
  code      String   @id @default(dbgenerated("substr(md5(random()::text), 0, 7)"))
  classId   String   @unique
  createdAt DateTime @default(now())

  class Class @relation(references: [id], fields: [classId], onDelete: Cascade)
}

model Discussion {
  id          String     @id @default(cuid())
  class_id    String
  class       Class      @relation(references: [id], fields: [class_id], onDelete: Cascade)
  description String
  name        String
  responses   Response[]
  locked      Boolean    @default(false)
}

model Response {
  id            String     @id @default(cuid())
  poster_id     String
  content       String
  discussion_id String
  discussion    Discussion @relation(references: [id], fields: [discussion_id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  repliesFrom Reply[] @relation("replyFrom")
  repliesTo   Reply[] @relation("replyTo")
}

model Reply {
  id      String   @id @default(cuid())
  from_id String
  to_id   String
  from    Response @relation("replyFrom", references: [id], fields: [from_id], onDelete: Cascade)
  to      Response @relation("replyTo", references: [id], fields: [to_id], onDelete: Cascade)
}
